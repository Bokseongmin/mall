<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mShop">

	<!-- 목록 1차 -->
	<select id="list_1" resultType="GoodsViewVo">
		SELECT g.gdsNum, g.gdsName, g.cateCode, g.gdsImg, g.gdsThumbImg, c.cateCodeRef, c.cateName, gdsPrice, gdsStock, gdsDes, gdsImg, gdsDate
		FROM goods g
		INNER JOIN goods_category c
		ON g.cateCode = c.cateCode
		WHERE g.cateCode = #{cateCode}
		OR c.cateCodeRef = #{cateCodeRef}
	</select>
	
	<!-- 목록 2차 -->
	<select id="list_2" resultType="GoodsViewVo">
		SELECT g.gdsNum, g.gdsName, g.cateCode, g.gdsImg, g.gdsThumbImg, c.cateCodeRef, c.cateName, gdsPrice, gdsStock, gdsDes, gdsImg, gdsDate
		FROM goods g
		INNER JOIN goods_category c
		ON g.cateCode = c.cateCode
		WHERE g.cateCode = #{cateCode}
	</select>
	
	<!-- 조회 -->
	<select id="view" resultType="GoodsViewVo">
		SELECT g.gdsNum, g.gdsName, g.cateCode, c.cateCodeRef, c.cateName, gdsPrice, gdsStock, gdsDes, gdsImg, gdsThumbImg, gdsDate
        FROM goods g
        INNER JOIN goods_category c
        ON g.cateCode = c.cateCode          
        WHERE g.gdsNum = #{gdsNum}
	</select>
	
	<!-- 리뷰 작성 -->
	<insert id="up">
		INSERT INTO reply(gdsNum, userId, repCon)
		VALUES (#{gdsNum}, #{userId}, #{repCon})
	</insert>
	
	<!-- 리뷰 목록 -->
	<select id="reply_list" resultType="ReplyVo">
		SELECT  r.repNum, r.gdsNum, r.userId, r.repCon, r.repDate, a.userName
		FROM reply r
		INNER JOIN account a
		ON r.userId = a.userId
		WHERE gdsNum = #{gdsNum}
	</select>
	
	<!-- 리뷰 수정 -->
	<update id="reply_modify">
		UPDATE reply
		SET repCon = #{repCon}
		WHERE repNum = #{repNum}
		AND userId = #{userId}
	</update>

	<!-- 리뷰 삭제 -->
	<delete id="reply_delete">
		DELETE FROM reply
		WHERE repNum = #{repNum}
		AND userId = #{userId}
	</delete>
	
	<select id="reply_idCheck" resultType="String">
		SELECT userId
		FROM reply
		WHERE repNum = #{repNum}
	</select>
	
	<!-- 카트 담기 -->
	<insert id="cart_add">
		INSERT INTO cart(userId, gdsNum, cartStock)
		VALUES (#{userId}, #{gdsNum}, #{cartStock});
	</insert>
	
	<!-- 카트 -->
	<select id="cart_list" resultType="CartVo">
		SELECT ROW_NUMBER() OVER(ORDER BY c.cartNum DESC) AS num, c.cartNum, c.userId, c.gdsNum, c.cartStock, c.addDate,
		g.gdsNum, g.gdsPrice, g.gdsThumbImg
		FROM cart c
		INNER JOIN goods g
		ON c.gdsNum = g.gdsNum
		WHERE c.userId = #{userId}
	</select>
	
	<!-- 선택 삭제 -->
	<delete id="cart_delete">
		DELETE FROM cart
		WHERE cartNum = #{cartNum}
		AND userId = #{userId}
	</delete>
	
	<!-- 주문 정보 -->
	<insert id="order_info">
		INSERT INTO order_tbl(orderId, userId, orderRec, userAddr1, userAddr2, userAddr3, orderPhon, amount)
		VALUES (#{orderId}, #{userId}, #{orderRec}, #{userAddr1}, #{userAddr2}, #{userAddr3}, #{orderPhon}, #{amount})
	</insert>
	
	<!-- 상세 주문 정보 -->
	<insert id="order_detail_info">
		INSERT INTO order_detail(orderId, gdsNum, cartStock)
		SELECT #{orderId}, gdsNum, cartStock
		FROM cart
	</insert>
	
	<!-- 카트 비우기 -->
	<delete id="delete_all">
		DELETE FROM cart
		WHERE userId = #{userId}
	</delete>
	
	<!-- 유저 주문 목록 -->
	<select id="order_list" resultType="OrderVo">
		SELECT orderId, userId, orderRec, userAddr1, userAddr2, userAddr3, orderPhon, amount, orderDate
		FROM order_tbl
		WHERE userId = #{userId}
	</select>
	
	<!-- 특정 주문 목록 -->
	<select id="order_view" resultType="OrderListVo">
		SELECT  o.orderId, o.userId, o.orderRec, o.userAddr1, o.userAddr2, o.userAddr3, o.orderPhon, o.amount, o.orderDate, d.orderNum, d.gdsNum, d.cartStock,
		g.gdsName, g.gdsThumbImg, g.gdsPrice
		FROM order_tbl o
		INNER JOIN order_detail d
		ON o.orderId = d.orderId
		INNER JOIN goods g
		ON d.gdsNum = g.gdsNum
		WHERE o.userId = #{userId}
		AND o.orderId = #{orderId}
	</select>
</mapper>