<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mAdmin">

	<!-- 카테고리 호출 -->
	<select id="category" resultType="CategoryVo">
		WITH recursive cte AS (
		SELECT cateName, cateCode, cateCodeRef, 1 AS level
		FROM mall.goods_category
		WHERE cateCodeRef IS null
		UNION all
		SELECT g.cateName, g.cateCode, g.cateCodeRef, 1 + LEVEL AS level
		FROM mall.goods_category g
		INNER JOIN cte
		ON g.cateCodeRef = cte.cateCode
		)
		SELECT cateName, cateCode, cateCodeRef, LEVEL FROM cte;
	</select>
	
	<!-- 상품 등록 -->
	<insert id="up">
		INSERT INTO goods (gdsName, cateCode, gdsPrice, gdsStock, gdsDes, gdsImg, gdsThumbImg)
     	VALUES (#{gdsName}, #{cateCode}, #{gdsPrice}, #{gdsStock}, #{gdsDes}, #{gdsImg}, #{gdsThumbImg})
	</insert>
	
	<!-- 상품 목록
	<select id="list" resultType="GoodsVo">
		SELECT gdsNum, gdsName, cateCode, gdsPrice, gdsStock, gdsDes, gdsImg, gdsDate
    	FROM goods
        ORDER BY gdsNum desc
	</select>
	-->
	
	<!-- 상품 목록 -->
	<select id="list" resultType="GoodsViewVo">
		SELECT g.gdsNum, g.gdsName, g.cateCode, c.cateCodeRef, c.cateName, gdsPrice, gdsStock, gdsDes, gdsImg, gdsThumbImg, gdsDate
        FROM goods g
        INNER JOIN goods_category c
        ON g.cateCode = c.cateCode
	</select>
	
	<!-- 상품 정보 -->
	<!--
	<select id="view" resultType="GoodsVo">
		SELECT gdsNum, gdsName, cateCode, gdsPrice, gdsStock, gdsDes, gdsImg, gdsDate
     	FROM goods
        WHERE gdsNum = #{gdsNum}
	</select> -->
	
	<!-- 상품 조회 + 카테고리 조인-->
	<select id="view" resultType="GoodsViewVO">
		SELECT g.gdsNum, g.gdsName, g.cateCode, c.cateCodeRef, c.cateName, gdsPrice, gdsStock, gdsDes, gdsImg, gdsThumbImg, gdsDate
        FROM goods g
        INNER JOIN goods_category c
        ON g.cateCode = c.cateCode          
        WHERE g.gdsNum = #{gdsNum}
	</select>
	
	<!-- 상품 수정 -->
	<update id="modify">
		UPDATE goods
		SET gdsName = #{gdsName}, cateCode = #{cateCode}, gdsPrice = #{gdsPrice}, gdsStock = #{gdsStock},  gdsImg = #{gdsImg}, gdsThumbImg = #{gdsThumbImg}, gdsDes = #{gdsDes}
		WHERE gdsNum = ${gdsNum}
	</update>
	
	<!-- 상품 삭제 -->
	<delete id="delete">
		DELETE FROM goods
		WHERE gdsNum=#{gdsNum}
	</delete>
	
	<!-- 모든 유저의 주문 목록 -->
	<select id="order_list" resultType="OrderVo">
		SELECT orderId, userId, orderRec, userAddr1, userAddr2, userAddr3, orderPhon, amount, orderDate, delivery
		FROM order_tbl
	</select>
	
	<!-- 주문 목록 -->
	<select id="order_view" resultType="OrderListVo">
		SELECT  o.orderId, o.userId, o.orderRec, o.userAddr1, o.userAddr2, o.userAddr3, o.orderPhon, o.amount, o.orderDate, o.delivery, d.orderNum, d.gdsNum, d.cartStock,
		g.gdsName, g.gdsThumbImg, g.gdsPrice
		FROM order_tbl o
		INNER JOIN order_detail d
		ON o.orderId = d.orderId
		INNER JOIN goods g
		ON d.gdsNum = g.gdsNum
		WHERE o.orderId = #{orderId}
	</select>
	
	<!-- 배송 상태 -->
	<update id="delivery">
		UPDATE order_tbl
		SET delivery = #{delivery}
		WHERE orderId = #{orderId}
	</update>
</mapper>